!!!) Виртуально окружение 

1) Создайте директорию, в которой будет находиться проект и
виртуальное окружение(Используется команда "python −m venv" и
название директории, в которой будет создано виртуальное
окружение.):
mkdir название_проекта
cd название_проекта
python -m venv название_окружения
2) Для активации окружения запустите скрипт activate.bat внутри директории с
виртуальным окружением.
\название_проекта\название_окружения\Scripts\activate.bat
2*) По окончанию работы запуститe скрипт deactivate.bat.
\название_проекта\название_окружения\Scripts\deactivate.bat



3)После этого 
Создайте файл requirements.txt и поместитe в него строку Django==2.2.
Активируйте виртуальное окружение и установите зависимости из requirements.txt
pip install -r requirements.txt

// это установится из pip install -r requirements.txt
----) Установка Django ==2.2 (если не установлен)
	pip install Django==2.2
//


4) todo это папка с названием папки нашего дажнго
	django-admin startproject todo
5) Тепреь созаддим проект с именем (task)
	django-admin startapp task
6) теперь сделаем миграцию наших данных в БД
	puthon manage.py migrate



7) Созадание суперюзера(адина)
	python manage.py createsuperuser

// Для запуска через cmd	
	python manage.py runserver






Сама структура выглядит так Название папки ГДЕ ДЖАНГО там фаил manage.py и db.sqlite3 (БД)
потом идет 2 папки:
1 папка например news-> там находятся файлы .py:
__init__
setting
urls
wsgi
2 папка например app_news-> там находятся файлы:
migrations (папка где миграции )
tempaltes(шаблоны html )
__init__.py
admin.py - тут мы создаем модели в админки
models.py - тут мы созадем как в БД будут хранитсья данные
forms.py - тут модель формы ( типа регистрация или какие либо данные, так же там можно делать проверки введеных данных ну и просто свзяь между БД и выводом на html
urls.py - тут все пути страницы (котоыре сюда перенаправили из главного urls.py)
view.py - тут самая магия- тут пишем представления, которые уже будут выводить наши переменные в html )


======================================================================================

Теперь как из Pycharm работать с джанго!
1) Открыть setting (вверху справа)
2) убедиться что стоит cmd - в Tools - Terminal  - В Application Setting : Shell path - выбрать путь к cmd
Далее в Project Setting:
Start directory: Выберите текущий проект (он с него будет загружать сразу путь cmd ) - удобно
3) Launguages Frameworks - Django 
Установит галочку Enable Django Support
Django project root - указать к папке основного проекте (где лежит setting.py)
Setting: -  путь к этоу файлу по факту будет ИМЯ_ПАПКИ/setting.py
Manage script - manage.py  это написать

Теперь что бы было можно нажимать RUN и сразу запускался runserver

Вверху от треугольника зеленго ( там формы нажать и выбрать там Edit COnfigurations)
В открывшемся окне слева нажать +
Выбрать там Django server
В поле Name : НАписать имя которое будет отображатсья дял удобства запуска
Поставить галочку Run browser :  и там адрес котоырй будет запускатьсбя

И обезательно в Environment variables:  PYTHONUNBUFFERED=1;DJANGO_SETTINGS_MODULE=news.settings    указать путь к setting в основном это папка типа тут news - в зависимости от проекта может меняться


======================================================================================






-----------------------------------------------------------------------------------------------------------
// Далее в setting.py

INSTALLED_APPS = [
	'app_news',
	'Название папки где наш проект app_news',
	// далее куча джанговских//
]

/Тут при каждмо посещении сайта будет вызываться функция которую мы добавим
например функция LogginsMiddleware, - которая допустим находиться в папке с названием board->middleware->logging_middleware.py и там класс  LogginsMiddleware

 и там например из-за __call__ (при вызове этйо функции) типа проверяет IP с котрого взывали

    def __call__(self, request):
        allow_ips = ["127.0.0.1"]
        ip = request.META.get('REMOTE_ADDR')
        if ip not in allow_ips:
            raise PermissionDenied
        response = self.get_response(request)


MIDDLEWARE = [
	'board.middleware.logging_middleware.LogginsMiddleware',
]

Тут база данных

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


ROOT_URLCONF = 'news.urls'  это типа название папки и ссылка основго фалйа urls



-----------------------------------------------------------------------------------------------------------
ИЗ основного меню
URLS.py

 path('', include('advertisements.urls')), - это означате по адресу ''(по факту главное меню) мы делаем перенаправление на папку  advertisements и в ней файл urls.py , где заного уже прпоисаны пути страниц нужные
urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('advertisements.urls')),
]


-----------------------------------------------------------------------------------------------------------

apps.py я так понял туту прописать что бы папка была как бы рабочей пример
from django.apps import AppConfig


class AppNewsConfig(AppConfig):
    name = 'app_news'

папка app_news - там все основное
 

-----------------------------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------------------------
Папка tempaltes  - туда создавать наши html странички (html)













